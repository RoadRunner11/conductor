---
- name: Install Certbot
  become: yes
  apt: name=letsencrypt state=present

- name: Install Nginx
  become: yes
  apt: name=nginx-core state=present
  notify:
    - Start Nginx

- name: Permit HTTP traffic
  become: yes
  ufw: rule=allow port=http proto=tcp

- name: Permit HTTPS traffic
  become: yes
  ufw: rule=allow port=https proto=tcp

- name: Permit SSH traffic
  become: yes
  ufw: rule=allow port=ssh proto=tcp

- name: Enable the firewall
  become: yes
  ufw: state=enabled

- name: Configure Nginx
  become: yes
  file: dest=/etc/nginx/sites-enabled/default state=absent

- template: src=conductor.com.j2 dest=/etc/nginx/sites-available/conductor.com
  become: yes
  notify:
    - Restart Nginx

- template: src=uwsgi_params.j2 dest=/etc/nginx/uwsgi_params
  become: yes
  notify:
    - Restart Nginx

- name: Create symlink to conductor.com
  become: yes
  file: src=/etc/nginx/sites-available/conductor.com
        dest=/etc/nginx/sites-enabled/conductor.com
        state=link
  notify:
    - Restart Nginx

- name: Check for cert directory
  become: yes
  stat: path={{ cert_dir }}
  register: certdir

- name: Create cert
  become: yes
  command: >
    /usr/bin/letsencrypt certonly --webroot
    --email "{{ secrets.conductor.email }}"
    --agree-tos
    --webroot-path "{{ client_root }}"
    -d "{{ root_domain }}"
    -d "{{ client_domain }}"
  when: deployment == "production" and certdir.stat.isdir is not defined
  notify:
    - Restart Nginx

- copy: src=renewCerts.sh dest=/srv/renewCerts.sh owner=root group=root mode=0750
  become: yes

- name: Add daily cert renewal check to cron
  become: yes
  cron:
    name: Check for certificate renewal
    state: present
    job: /srv/renewCerts.sh
    special_time: weekly
  when: deployment == "production"

# Nginx is configured to get certs, but if a new deployment does not happen,
# then the cert loaded in memory can get stale.
# Do a Nginx restart on the weekend to pick up any updated cert.
- name: Add Nginx restart cron
  become: yes
  cron:
    name: Restart Nginx
    state: present
    weekday: 0
    hour: 3
    minute: 0
    job: "service nginx restart"

- file: path={{ cert_dir }} owner=root group=root mode=0700 state=directory
  become: yes
  when: deployment == "development"

- copy: src=chain.pem dest={{ cert_dir }}/chain.pem
  become: yes
  when: deployment == "development"

- copy: src=chain.pem dest={{ cert_dir }}/fullchain.pem
  become: yes
  when: deployment == "development"

- copy: src=privkey.pem dest={{ cert_dir }}/privkey.pem
  become: yes
  when: deployment == "development"

- name: Check for Diffie-Hellman Group
  stat: path=/etc/ssl/certs/dhparam.pem
  register: dhparam

- name: Create Diffie-Hellman Group
  become: yes
  command: /usr/bin/openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  when: dhparam.stat.exists == False
  notify:
    - Restart Nginx

# Probably not the best place to notify about a deploy
# but there will only be one load balancer and it is handled last
# so this works for now.
- name: Fetch Git repo info
  become: yes
  git:
    repo: git@github.com:mblayman/conductor.git
    dest: "{{ app_path }}"
    update: no
  register: gitinfo

- name: Notify Rollbar of deployment
  rollbar_deployment:
    environment: "{{ deployment }}"
    revision: "{{ gitinfo.after }}"
    token: "{{ secrets.rollbar.access_token }}"
    user: mblayman
